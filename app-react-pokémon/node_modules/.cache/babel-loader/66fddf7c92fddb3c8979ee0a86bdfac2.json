{"ast":null,"code":"export default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n\n  static updatePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static deletePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static addPokemon(pokemon) {\n    delete pokemon.created;\n    return fetch(`http://localhost:3001/pokemons`, {\n      method: 'POST',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error) {\n    console.log(error);\n  }\n\n}","map":{"version":3,"sources":["/Users/mouhyi-eddinemoutarajji/Desktop/app-react-pokeÃÅmon/src/services/pokemon-service.tsx"],"names":["PokemonService","getPokemons","fetch","then","response","json","catch","error","handleError","getPokemon","id","data","isEmpty","updatePokemon","pokemon","method","body","JSON","stringify","headers","deletePokemon","addPokemon","created","Object","keys","length","console","log"],"mappings":"AAEA,eAAe,MAAMA,cAAN,CAAqB;AAElC,SAAOC,WAAP,GAAyC;AACvC,WAAOC,KAAK,CAAC,gCAAD,CAAL,CACJC,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJC,KAFI,CAEEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAFX,CAAP;AAGD;;AAED,SAAOE,UAAP,CAAkBC,EAAlB,EAAqD;AACnD,WAAOR,KAAK,CAAE,kCAAiCQ,EAAG,EAAtC,CAAL,CACJP,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECQ,IAAI,IAAI,KAAKC,OAAL,CAAaD,IAAb,IAAqB,IAArB,GAA4BA,IAFrC,EAGJL,KAHI,CAGEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAHX,CAAP;AAID;;AAED,SAAOM,aAAP,CAAqBC,OAArB,EAAyD;AACrD,WAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAA9C,EAAiD;AACzDK,MAAAA,MAAM,EAAC,KADkD;AAEzDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAFmD;AAGzDK,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHgD,KAAjD,CAAL,CAKNhB,IALM,CAKDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALX,EAMNC,KANM,CAMAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CANT,CAAP;AAOH;;AAED,SAAOa,aAAP,CAAqBN,OAArB,EAAoD;AAChD,WAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAA9C,EAAiD;AACzDK,MAAAA,MAAM,EAAC,QADkD;AAEzDI,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAFgD,KAAjD,CAAL,CAINhB,IAJM,CAIDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJX,EAKNC,KALM,CAKAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CALT,CAAP;AAMH;;AAED,SAAOc,UAAP,CAAkBP,OAAlB,EAAqD;AACnD,WAAOA,OAAO,CAACQ,OAAf;AAEA,WAAOpB,KAAK,CAAE,gCAAF,EAAmC;AACzCa,MAAAA,MAAM,EAAC,MADkC;AAEzCC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAFoC;AAGzCK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHgC,KAAnC,CAAL,CAKJhB,IALI,CAKCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALb,EAMJC,KANI,CAMEC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CANX,CAAP;AAOD;;AAED,SAAOK,OAAP,CAAeD,IAAf,EAAsC;AACpC,WAAOY,MAAM,CAACC,IAAP,CAAYb,IAAZ,EAAkBc,MAAlB,KAA6B,CAApC;AACD;;AAED,SAAOjB,WAAP,CAAmBD,KAAnB,EAAsC;AAClCmB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACH;;AApDiC","sourcesContent":["import Pokemon from \"../models/pokemon\";\n \nexport default class PokemonService {\n \n  static getPokemons(): Promise<Pokemon[]> {\n    return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n  }\n \n  static getPokemon(id: number): Promise<Pokemon|null> {\n    return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n          method:'PUT',\n          body: JSON.stringify(pokemon),\n          headers: {'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n          method:'DELETE',\n          headers: {'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n  }\n\n  static addPokemon(pokemon:Pokemon): Promise<Pokemon> {\n    delete pokemon.created;\n  \n    return fetch(`http://localhost:3001/pokemons`, {\n          method:'POST',\n          body:JSON.stringify(pokemon),\n          headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n  \n  static handleError(error: Error): void{\n      console.log(error)\n  }\n}"]},"metadata":{},"sourceType":"module"}